// <auto-generated />
using System;
using FleatMarket.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FleatMarket.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FleatMarket.Base.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Путешествия"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Развлечения"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Книги"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Техника"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "В дар"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Животные"
                        });
                });

            modelBuilder.Entity("FleatMarket.Base.Entities.Declaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DeclarationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DeclarationStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Declarations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DeclarationStatusId = 1,
                            Description = "Не упустите момент попасть на российские Мальдивы",
                            TimeOfCreation = new DateTime(2020, 3, 25, 13, 14, 39, 102, DateTimeKind.Local).AddTicks(8476),
                            Title = "Путевка в Челябинск",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            DeclarationStatusId = 1,
                            Description = "Заберите кота от меня подальше",
                            TimeOfCreation = new DateTime(2020, 3, 25, 13, 14, 39, 103, DateTimeKind.Local).AddTicks(6952),
                            Title = "Британец короткошерстный",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            DeclarationStatusId = 2,
                            Description = "Увлекательное путешествие в мир волшебства",
                            TimeOfCreation = new DateTime(2020, 3, 25, 13, 14, 39, 103, DateTimeKind.Local).AddTicks(6991),
                            Title = "Книга Гарри Поттера",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("FleatMarket.Base.Entities.DeclarationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeclarationStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Открыто"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Продано"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Удалено"
                        });
                });

            modelBuilder.Entity("FleatMarket.Base.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("FleatMarket.Base.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EMail = "User1@mail.ru",
                            IsActive = true,
                            Name = "Vasya",
                            Password = "user1",
                            Phone = "123456789",
                            RoleId = 1,
                            Surname = "Ivanov"
                        },
                        new
                        {
                            Id = 2,
                            EMail = "User2@mail.ru",
                            IsActive = true,
                            Name = "Petya",
                            Password = "user2",
                            Phone = "987654321",
                            RoleId = 1,
                            Surname = "Tushenka"
                        },
                        new
                        {
                            Id = 3,
                            EMail = "Admin@mail.ru",
                            IsActive = true,
                            Name = "Alesha",
                            Password = "admin",
                            Phone = "192837465",
                            RoleId = 2,
                            Surname = "Popovich"
                        });
                });

            modelBuilder.Entity("FleatMarket.Base.Entities.Declaration", b =>
                {
                    b.HasOne("FleatMarket.Base.Entities.Category", "Category")
                        .WithMany("Declarations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FleatMarket.Base.Entities.DeclarationStatus", "DeclarationStatus")
                        .WithMany("Declarations")
                        .HasForeignKey("DeclarationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FleatMarket.Base.Entities.User", "User")
                        .WithMany("Declarations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FleatMarket.Base.Entities.User", b =>
                {
                    b.HasOne("FleatMarket.Base.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
